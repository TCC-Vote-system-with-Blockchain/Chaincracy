/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Chaincracy, ChaincracyInterface } from "../Chaincracy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidatoId",
        type: "uint256",
      },
    ],
    name: "VotoRegistrado",
    type: "event",
  },
  {
    inputs: [],
    name: "TotalVotos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosDoCargo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosporCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_nomeCandidato",
        type: "string",
      },
      {
        internalType: "string",
        name: "_img",
        type: "string",
      },
    ],
    name: "adicionarCandidato",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
    ],
    name: "adicionarCargo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidatos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCandidato",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votos",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "img",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargoCandidatos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCargo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comecarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "candidateNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatoDoCargo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosDoCargo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosIdsDoCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
    ],
    name: "getInformacaoCandidato",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getListaDeCandidatoPorCargoPrimerioVencedor",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidatoId",
        type: "uint256",
      },
    ],
    name: "getNomeCandidato",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarCargos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCargo",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Cargo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepararVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "statusEleicao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusVotacao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "votar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a1b9bdd17dcdd185c9d195960aa1b60a0526003906200002c9082620000f8565b503480156200003a57600080fd5b50600280546001600160a01b03191633179055620001c4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007e57607f821691505b6020821081036200009f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f357600081815260208120601f850160051c81016020861015620000ce5750805b601f850160051c820191505b81811015620000ef57828155600101620000da565b5050505b505050565b81516001600160401b0381111562000114576200011462000053565b6200012c8162000125845462000069565b84620000a5565b602080601f8311600181146200016457600084156200014b5750858301515b600019600386901b1c1916600185901b178555620000ef565b600085815260208120601f198616915b82811015620001955788860151825594840194600190910190840162000174565b5085821015620001b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61220480620001d46000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638f023f85116100c3578063b503c3e71161007c578063b503c3e71461031e578063bc243e6d14610331578063c298956214610339578063dcfb28c71461034c578063e7d5966214610354578063f85174cc1461036757600080fd5b80638f023f851461028a5780638f32d59b146102ad578063904eb047146102b55780639cf8dd55146102d55780639d791ae8146102ea578063af10f05e1461030b57600080fd5b8063585648601161011557806358564860146101fc5780635fb9afba146102115780636800e08514610224578063851a6c28146102445780638a132f72146102575780638da5cb5b1461025f57600080fd5b80630ca735371461015d5780630ee24c83146101675780631d1af99f1461019057806327a22ec11461019857806333b2e20c146101d65780634fa5a16f146101e9575b600080fd5b61016561037a565b005b61017a610175366004611b86565b6103df565b6040516101879190611b9f565b60405180910390f35b6101656103fe565b6101c66101a6366004611be3565b600560209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610187565b6101656101e4366004611cbe565b610457565b6101656101f7366004611d35565b61067e565b610204610867565b6040516101879190611da7565b61016561021f366004611dba565b6108f9565b610237610232366004611d35565b610a47565b6040516101879190611e3a565b610204610252366004611b86565b610b33565b610165610be1565b600254610272906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b61029d610298366004611b86565b610cd2565b6040516101879493929190611e4d565b610165610e22565b6102c86102c3366004611b86565b610e8e565b6040516101879190611e89565b6102dd6110e9565b6040516101879190611eeb565b6102fd6102f8366004611b86565b6111d6565b604051908152602001610187565b6102fd610319366004611d35565b611237565b61017a61032c366004611b86565b611268565b6102046112ca565b610204610347366004611b86565b611358565b6102fd611404565b6102c8610362366004611b86565b61145d565b610237610375366004611b86565b6116ae565b6002546001600160a01b031633146103ad5760405162461bcd60e51b81526004016103a490611f48565b60405180910390fd5b60408051808201909152600b81526a696e5f70726f677265737360a81b60208201526003906103dc9082612011565b50565b606060006103ec83611268565b90506103f7816118d8565b9392505050565b6002546001600160a01b031633146104285760405162461bcd60e51b81526004016103a490611f48565b60408051808201909152600b81526a1b9bdd17dcdd185c9d195960aa1b60208201526003906103dc9082612011565b6002546001600160a01b031633146104815760405162461bcd60e51b81526004016103a490611f48565b60005b6001548110156105595783600182815481106104a2576104a26120d1565b906000526020600020906004020160010154036105475760006104c486611268565b905060005b815181101561054457828282815181106104e5576104e56120d1565b6020026020010151036105325760405162461bcd60e51b81526020600482015260156024820152746e756d65726f206a61206361646173747261646f2160581b60448201526064016103a4565b8061053c816120fd565b9150506104c9565b50505b80610551816120fd565b915050610484565b5060005461056990600190612116565b8411156105ae5760405162461bcd60e51b8152602060048201526013602482015272636172676f206e616f206578697374656e746560681b60448201526064016103a4565b6040805160808101825283815260208101859052600091810182905260608101839052600180548082018255925280519091829160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906106169082612011565b5060208201516001820155604082015160028201556060820151600382019061063f9082612011565b505060018054600092506106539190612116565b6000968752600460209081526040882080546001810182559089529720909601959095555050505050565b6040516a696e5f70726f677265737360a81b6020820152602b016040516020818303038152906040528051906020012060036040516020016106c09190612129565b60405160208183030381529060405280519060200120146107195760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b60448201526064016103a4565b33600090815260056020908152604080832084845290915290205460ff161561079e5760405162461bcd60e51b815260206004820152603160248201527f566f746f206a61207265676973747261646f20706f722065737361206361727460448201527065697261206e6573746520636172676f2160781b60648201526084016103a4565b60006107aa83836119a2565b9050600181815481106107bf576107bf6120d1565b6000918252602082206002600490920201018054916107dd836120fd565b91905055507f652eeaa57ccbb2f4fa0be02c6b0e7c5fadf5452a75bbb3fccc36fea46443156c60018281548110610816576108166120d1565b90600052602060002090600402016001015460405161083791815260200190565b60405180910390a15033600090815260056020908152604080832093835292905220805460ff1916600117905550565b60606003805461087690611f8e565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290611f8e565b80156108ef5780601f106108c4576101008083540402835291602001916108ef565b820191906000526020600020905b8154815290600101906020018083116108d257829003601f168201915b5050505050905090565b6002546001600160a01b031633146109235760405162461bcd60e51b81526004016103a490611f48565b60005b6000548110156109f15781604051602001610941919061219f565b604051602081830303815290604052805190602001206000828154811061096a5761096a6120d1565b906000526020600020016000016040516020016109879190612129565b60405160208183030381529060405280519060200120036109df5760405162461bcd60e51b8152602060048201526012602482015271436172676f206a61206578697374656e746560701b60448201526064016103a4565b806109e9816120fd565b915050610926565b50604080516020810190915281815260008054600181018255908052815182917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301908190610a409082612011565b5050505050565b610a726040518060800160405280606081526020016000815260200160008152602001606081525090565b6000610a7d8361145d565b905060005b8151811015610ae45784828281518110610a9e57610a9e6120d1565b60200260200101516020015103610ad257818181518110610ac157610ac16120d1565b602002602001015192505050610b2d565b80610adc816120fd565b915050610a82565b5060405162461bcd60e51b815260206004820152601960248201527f43616e64696461746f206e616f20656e636f6e747261646f210000000000000060448201526064016103a4565b92915050565b60008181548110610b4357600080fd5b600091825260209091200180549091508190610b5e90611f8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a90611f8e565b8015610bd75780601f10610bac57610100808354040283529160200191610bd7565b820191906000526020600020905b815481529060010190602001808311610bba57829003601f168201915b5050505050905081565b6040516a696e5f70726f677265737360a81b6020820152602b01604051602081830303815290604052805190602001206003604051602001610c239190612129565b6040516020818303038152906040528051906020012014610c7c5760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b60448201526064016103a4565b6002546001600160a01b03163314610ca65760405162461bcd60e51b81526004016103a490611f48565b604080518082019091526008815267199a5b9a5cda195960c21b60208201526003906103dc9082612011565b60018181548110610ce257600080fd5b9060005260206000209060040201600091509050806000018054610d0590611f8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3190611f8e565b8015610d7e5780601f10610d5357610100808354040283529160200191610d7e565b820191906000526020600020905b815481529060010190602001808311610d6157829003601f168201915b505050505090806001015490806002015490806003018054610d9f90611f8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb90611f8e565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b5050505050905084565b6002546001600160a01b03163314610e8c5760405162461bcd60e51b815260206004820152602760248201527f456e74726f75206e6f20494620652061206361727465697261206e616f2065686044820152661034b3bab0b61760c91b60648201526084016103a4565b565b60606000610e9b83611268565b90506000815167ffffffffffffffff811115610eb957610eb9611c1b565b604051908082528060200260200182016040528015610f1557816020015b610f026040518060800160405280606081526020016000815260200160008152602001606081525090565b815260200190600190039081610ed75790505b50905060005b82518110156110d7576000838281518110610f3857610f386120d1565b6020026020010151905060018181548110610f5557610f556120d1565b9060005260206000209060040201604051806080016040529081600082018054610f7e90611f8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610faa90611f8e565b8015610ff75780601f10610fcc57610100808354040283529160200191610ff7565b820191906000526020600020905b815481529060010190602001808311610fda57829003601f168201915b50505050508152602001600182015481526020016002820154815260200160038201805461102490611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461105090611f8e565b801561109d5780601f106110725761010080835404028352916020019161109d565b820191906000526020600020905b81548152906001019060200180831161108057829003601f168201915b5050505050815250508383815181106110b8576110b86120d1565b60200260200101819052505080806110cf906120fd565b915050610f1b565b506110e181611a46565b949350505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156111cd5783829060005260206000200160405180602001604052908160008201805461113c90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461116890611f8e565b80156111b55780601f1061118a576101008083540402835291602001916111b5565b820191906000526020600020905b81548152906001019060200180831161119857829003601f168201915b5050505050815250508152602001906001019061110d565b50505050905090565b600080806111e38461145d565b905060005b815181101561122e57818181518110611203576112036120d1565b6020026020010151604001518361121a91906121bb565b925080611226816120fd565b9150506111e8565b50909392505050565b6004602052816000526040600020818154811061125357600080fd5b90600052602060002001600091509150505481565b6000818152600460209081526040918290208054835181840281018401909452808452606093928301828280156112be57602002820191906000526020600020905b8154815260200190600101908083116112aa575b50505050509050919050565b600380546112d790611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461130390611f8e565b80156113505780601f1061132557610100808354040283529160200191611350565b820191906000526020600020905b81548152906001019060200180831161133357829003601f168201915b505050505081565b60606001828154811061136d5761136d6120d1565b9060005260206000209060040201600001805461138990611f8e565b80601f01602080910402602001604051908101604052809291908181526020018280546113b590611f8e565b80156112be5780601f106113d7576101008083540402835291602001916112be565b820191906000526020600020905b8154815290600101906020018083116113e55750939695505050505050565b600080805b6001548110156114575760018181548110611426576114266120d1565b9060005260206000209060040201600201548261144391906121bb565b91508061144f816120fd565b915050611409565b50919050565b6060600061146a83611268565b90506000815167ffffffffffffffff81111561148857611488611c1b565b6040519080825280602002602001820160405280156114e457816020015b6114d16040518060800160405280606081526020016000815260200160008152602001606081525090565b8152602001906001900390816114a65790505b50905060005b82518110156116a6576000838281518110611507576115076120d1565b6020026020010151905060018181548110611524576115246120d1565b906000526020600020906004020160405180608001604052908160008201805461154d90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461157990611f8e565b80156115c65780601f1061159b576101008083540402835291602001916115c6565b820191906000526020600020905b8154815290600101906020018083116115a957829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820180546115f390611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461161f90611f8e565b801561166c5780601f106116415761010080835404028352916020019161166c565b820191906000526020600020905b81548152906001019060200180831161164f57829003601f168201915b505050505081525050838381518110611687576116876120d1565b602002602001018190525050808061169e906120fd565b9150506114ea565b509392505050565b6116d96040518060800160405280606081526020016000815260200160008152602001606081525090565b60005b60015481101561188f5782600182815481106116fa576116fa6120d1565b9060005260206000209060040201600101540361187d5760018181548110611724576117246120d1565b906000526020600020906004020160405180608001604052908160008201805461174d90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461177990611f8e565b80156117c65780601f1061179b576101008083540402835291602001916117c6565b820191906000526020600020905b8154815290600101906020018083116117a957829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820180546117f390611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461181f90611f8e565b801561186c5780601f106118415761010080835404028352916020019161186c565b820191906000526020600020905b81548152906001019060200180831161184f57829003601f168201915b505050505081525050915050919050565b80611887816120fd565b9150506116dc565b5060405162461bcd60e51b815260206004820152601860248201527f43616e64696461746f206e616f20656e636f6e747261646f000000000000000060448201526064016103a4565b60606000825167ffffffffffffffff8111156118f6576118f6611c1b565b60405190808252806020026020018201604052801561191f578160200160208202803683370190505b50905060005b835181101561199b576001848281518110611942576119426120d1565b60200260200101518154811061195a5761195a6120d1565b90600052602060002090600402016002015482828151811061197e5761197e6120d1565b602090810291909101015280611993816120fd565b915050611925565b5092915050565b6000805b60015481101561188f5783600182815481106119c4576119c46120d1565b90600052602060002090600402016001015403611a345760006119e684611268565b905060005b8151811015611a315782828281518110611a0757611a076120d1565b602002602001015103611a1f57829350505050610b2d565b80611a29816120fd565b9150506119eb565b50505b80611a3e816120fd565b9150506119a6565b606060005b60018351611a599190612116565b811015611b7f5760005b6001828551611a729190612116565b611a7c9190612116565b811015611b6c5783611a8f8260016121bb565b81518110611a9f57611a9f6120d1565b602002602001015160400151848281518110611abd57611abd6120d1565b6020026020010151604001511015611b5a576000848281518110611ae357611ae36120d1565b6020026020010151905084826001611afb91906121bb565b81518110611b0b57611b0b6120d1565b6020026020010151858381518110611b2557611b256120d1565b60209081029190910101528085611b3d8460016121bb565b81518110611b4d57611b4d6120d1565b6020026020010181905250505b80611b64816120fd565b915050611a63565b5080611b77816120fd565b915050611a4b565b5090919050565b600060208284031215611b9857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611bd757835183529284019291840191600101611bbb565b50909695505050505050565b60008060408385031215611bf657600080fd5b82356001600160a01b0381168114611c0d57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c4257600080fd5b813567ffffffffffffffff80821115611c5d57611c5d611c1b565b604051601f8301601f19908116603f01168101908282118183101715611c8557611c85611c1b565b81604052838152866020858801011115611c9e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611cd457600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115611cfa57600080fd5b611d0688838901611c31565b93506060870135915080821115611d1c57600080fd5b50611d2987828801611c31565b91505092959194509250565b60008060408385031215611d4857600080fd5b50508035926020909101359150565b60005b83811015611d72578181015183820152602001611d5a565b50506000910152565b60008151808452611d93816020860160208601611d57565b601f01601f19169290920160200192915050565b6020815260006103f76020830184611d7b565b600060208284031215611dcc57600080fd5b813567ffffffffffffffff811115611de357600080fd5b6110e184828501611c31565b6000815160808452611e046080850182611d7b565b9050602083015160208501526040830151604085015260608301518482036060860152611e318282611d7b565b95945050505050565b6020815260006103f76020830184611def565b608081526000611e606080830187611d7b565b8560208401528460408401528281036060840152611e7e8185611d7b565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ede57603f19888603018452611ecc858351611def565b94509285019290850190600101611eb0565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ede57878503603f19018452815151868652611f3587870182611d7b565b9550509285019290850190600101611f12565b60208082526026908201527f4170656e6173206f20646f6e6f20706f64652066617a65722065737361206f7060408201526565726163616f60d01b606082015260800190565b600181811c90821680611fa257607f821691505b60208210810361145757634e487b7160e01b600052602260045260246000fd5b601f82111561200c57600081815260208120601f850160051c81016020861015611fe95750805b601f850160051c820191505b8181101561200857828155600101611ff5565b5050505b505050565b815167ffffffffffffffff81111561202b5761202b611c1b565b61203f816120398454611f8e565b84611fc2565b602080601f831160018114612074576000841561205c5750858301515b600019600386901b1c1916600185901b178555612008565b600085815260208120601f198616915b828110156120a357888601518255948401946001909101908401612084565b50858210156120c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161210f5761210f6120e7565b5060010190565b81810381811115610b2d57610b2d6120e7565b600080835461213781611f8e565b6001828116801561214f576001811461216457612193565b60ff1984168752821515830287019450612193565b8760005260208060002060005b8581101561218a5781548a820152908401908201612171565b50505082870194505b50929695505050505050565b600082516121b1818460208701611d57565b9190910192915050565b80820180821115610b2d57610b2d6120e756fea26469706673582212200cd1613f2b645e6e0e2cb4afa9ed37d98ca67d7b501580840eed5ba3db1bccbc64736f6c63430008130033";

type ChaincracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChaincracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chaincracy__factory extends ContractFactory {
  constructor(...args: ChaincracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Chaincracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Chaincracy__factory {
    return super.connect(runner) as Chaincracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChaincracyInterface {
    return new Interface(_abi) as ChaincracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Chaincracy {
    return new Contract(address, _abi, runner) as unknown as Chaincracy;
  }
}
