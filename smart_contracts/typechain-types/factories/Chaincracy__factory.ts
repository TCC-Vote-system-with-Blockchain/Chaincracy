/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Chaincracy, ChaincracyInterface } from "../Chaincracy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidatoId",
        type: "uint256",
      },
    ],
    name: "VotoRegistrado",
    type: "event",
  },
  {
    inputs: [],
    name: "TotalVotos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosDoCargo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosporCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_nomeCandidato",
        type: "string",
      },
      {
        internalType: "string",
        name: "_img",
        type: "string",
      },
    ],
    name: "adicionarCandidato",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxNumTam",
        type: "uint256",
      },
    ],
    name: "adicionarCargo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidatos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCandidato",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votos",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "img",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargoCandidatos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
    ],
    name: "cargoNumeroMaximo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCargo",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxNumTam",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comecarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "candidateNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatoDoCargo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosDoCargo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosIdsDoCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
    ],
    name: "getInformacaoCandidato",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getListaDeCandidatoPorCargoPrimerioVencedor",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidatoId",
        type: "uint256",
      },
    ],
    name: "getNomeCandidato",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarCargos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCargo",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxNumTam",
            type: "uint256",
          },
        ],
        internalType: "struct Chaincracy.Cargo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepararVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "statusEleicao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusVotacao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "votar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a1b9bdd17dcdd185c9d195960aa1b60a0526003906200002c9082620000f8565b503480156200003a57600080fd5b50600280546001600160a01b03191633179055620001c4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007e57607f821691505b6020821081036200009f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f357600081815260208120601f850160051c81016020861015620000ce5750805b601f850160051c820191505b81811015620000ef57828155600101620000da565b5050505b505050565b81516001600160401b0381111562000114576200011462000053565b6200012c8162000125845462000069565b84620000a5565b602080601f8311600181146200016457600084156200014b5750858301515b600019600386901b1c1916600185901b178555620000ef565b600085815260208120601f198616915b82811015620001955788860151825594840194600190910190840162000174565b5085821015620001b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6123f480620001d46000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638f023f85116100de578063b503c3e711610097578063dcfb28c711610071578063dcfb28c714610375578063e3c439591461037d578063e7d5966214610390578063f85174cc146103a357600080fd5b8063b503c3e714610347578063bc243e6d1461035a578063c29895621461036257600080fd5b80638f023f85146102c15780638f32d59b146102e4578063904eb047146102ec5780639cf8dd551461030c5780639d791ae814610321578063af10f05e1461033457600080fd5b8063585648601161013057806358564860146102175780636800e0851461022c57806379471b9a1461024c578063851a6c281461026d5780638a132f721461028e5780638da5cb5b1461029657600080fd5b80630ca73537146101785780630ee24c83146101825780631d1af99f146101ab57806327a22ec1146101b357806333b2e20c146101f15780634fa5a16f14610204575b600080fd5b6101806103b6565b005b610195610190366004611cf6565b61041b565b6040516101a29190611d0f565b60405180910390f35b61018061043a565b6101e16101c1366004611d53565b600560209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101a2565b6101806101ff366004611e2e565b610493565b610180610212366004611ea5565b6106ba565b61021f6108a3565b6040516101a29190611f17565b61023f61023a366004611ea5565b610935565b6040516101a29190611f75565b61025f61025a366004611f88565b610a21565b6040519081526020016101a2565b61028061027b366004611cf6565b610b21565b6040516101a2929190611fbd565b610180610bdd565b6002546102a9906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b6102d46102cf366004611cf6565b610cce565b6040516101a29493929190611fdf565b610180610e1e565b6102ff6102fa366004611cf6565b610e8a565b6040516101a2919061201b565b6103146110e5565b6040516101a2919061207d565b61025f61032f366004611cf6565b6111e0565b61025f610342366004611ea5565b611241565b610195610355366004611cf6565b611272565b61021f6112d4565b61021f610370366004611cf6565b611362565b61025f61140e565b61018061038b3660046120f3565b611467565b6102ff61039e366004611cf6565b6115cd565b61023f6103b1366004611cf6565b61181e565b6002546001600160a01b031633146103e95760405162461bcd60e51b81526004016103e090612138565b60405180910390fd5b60408051808201909152600b81526a696e5f70726f677265737360a81b60208201526003906104189082612201565b50565b6060600061042883611272565b905061043381611a48565b9392505050565b6002546001600160a01b031633146104645760405162461bcd60e51b81526004016103e090612138565b60408051808201909152600b81526a1b9bdd17dcdd185c9d195960aa1b60208201526003906104189082612201565b6002546001600160a01b031633146104bd5760405162461bcd60e51b81526004016103e090612138565b60005b6001548110156105955783600182815481106104de576104de6122c1565b9060005260206000209060040201600101540361058357600061050086611272565b905060005b81518110156105805782828281518110610521576105216122c1565b60200260200101510361056e5760405162461bcd60e51b81526020600482015260156024820152746e756d65726f206a61206361646173747261646f2160581b60448201526064016103e0565b80610578816122ed565b915050610505565b50505b8061058d816122ed565b9150506104c0565b506000546105a590600190612306565b8411156105ea5760405162461bcd60e51b8152602060048201526013602482015272636172676f206e616f206578697374656e746560681b60448201526064016103e0565b6040805160808101825283815260208101859052600091810182905260608101839052600180548082018255925280519091829160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906106529082612201565b5060208201516001820155604082015160028201556060820151600382019061067b9082612201565b5050600180546000925061068f9190612306565b6000968752600460209081526040882080546001810182559089529720909601959095555050505050565b6040516a696e5f70726f677265737360a81b6020820152602b016040516020818303038152906040528051906020012060036040516020016106fc9190612319565b60405160208183030381529060405280519060200120146107555760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b60448201526064016103e0565b33600090815260056020908152604080832084845290915290205460ff16156107da5760405162461bcd60e51b815260206004820152603160248201527f566f746f206a61207265676973747261646f20706f722065737361206361727460448201527065697261206e6573746520636172676f2160781b60648201526084016103e0565b60006107e68383611b12565b9050600181815481106107fb576107fb6122c1565b600091825260208220600260049092020101805491610819836122ed565b91905055507f652eeaa57ccbb2f4fa0be02c6b0e7c5fadf5452a75bbb3fccc36fea46443156c60018281548110610852576108526122c1565b90600052602060002090600402016001015460405161087391815260200190565b60405180910390a15033600090815260056020908152604080832093835292905220805460ff1916600117905550565b6060600380546108b29061217e565b80601f01602080910402602001604051908101604052809291908181526020018280546108de9061217e565b801561092b5780601f106109005761010080835404028352916020019161092b565b820191906000526020600020905b81548152906001019060200180831161090e57829003601f168201915b5050505050905090565b6109606040518060800160405280606081526020016000815260200160008152602001606081525090565b600061096b836115cd565b905060005b81518110156109d2578482828151811061098c5761098c6122c1565b602002602001015160200151036109c0578181815181106109af576109af6122c1565b602002602001015192505050610a1b565b806109ca816122ed565b915050610970565b5060405162461bcd60e51b815260206004820152601960248201527f43616e64696461746f206e616f20656e636f6e747261646f210000000000000060448201526064016103e0565b92915050565b6000805b600054811015610ae45782604051602001610a40919061238f565b6040516020818303038152906040528051906020012060008281548110610a6957610a696122c1565b9060005260206000209060020201600001604051602001610a8a9190612319565b6040516020818303038152906040528051906020012003610ad25760008181548110610ab857610ab86122c1565b906000526020600020906002020160010154915050919050565b80610adc816122ed565b915050610a25565b5060405162461bcd60e51b8152602060048201526011602482015270436172676f20696e6578697374656e746560781b60448201526064016103e0565b60008181548110610b3157600080fd5b9060005260206000209060020201600091509050806000018054610b549061217e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b809061217e565b8015610bcd5780601f10610ba257610100808354040283529160200191610bcd565b820191906000526020600020905b815481529060010190602001808311610bb057829003601f168201915b5050505050908060010154905082565b6040516a696e5f70726f677265737360a81b6020820152602b01604051602081830303815290604052805190602001206003604051602001610c1f9190612319565b6040516020818303038152906040528051906020012014610c785760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b60448201526064016103e0565b6002546001600160a01b03163314610ca25760405162461bcd60e51b81526004016103e090612138565b604080518082019091526008815267199a5b9a5cda195960c21b60208201526003906104189082612201565b60018181548110610cde57600080fd5b9060005260206000209060040201600091509050806000018054610d019061217e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2d9061217e565b8015610d7a5780601f10610d4f57610100808354040283529160200191610d7a565b820191906000526020600020905b815481529060010190602001808311610d5d57829003601f168201915b505050505090806001015490806002015490806003018054610d9b9061217e565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc79061217e565b8015610e145780601f10610de957610100808354040283529160200191610e14565b820191906000526020600020905b815481529060010190602001808311610df757829003601f168201915b5050505050905084565b6002546001600160a01b03163314610e885760405162461bcd60e51b815260206004820152602760248201527f456e74726f75206e6f20494620652061206361727465697261206e616f2065686044820152661034b3bab0b61760c91b60648201526084016103e0565b565b60606000610e9783611272565b90506000815167ffffffffffffffff811115610eb557610eb5611d8b565b604051908082528060200260200182016040528015610f1157816020015b610efe6040518060800160405280606081526020016000815260200160008152602001606081525090565b815260200190600190039081610ed35790505b50905060005b82518110156110d3576000838281518110610f3457610f346122c1565b6020026020010151905060018181548110610f5157610f516122c1565b9060005260206000209060040201604051806080016040529081600082018054610f7a9061217e565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa69061217e565b8015610ff35780601f10610fc857610100808354040283529160200191610ff3565b820191906000526020600020905b815481529060010190602001808311610fd657829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820180546110209061217e565b80601f016020809104026020016040519081016040528092919081815260200182805461104c9061217e565b80156110995780601f1061106e57610100808354040283529160200191611099565b820191906000526020600020905b81548152906001019060200180831161107c57829003601f168201915b5050505050815250508383815181106110b4576110b46122c1565b60200260200101819052505080806110cb906122ed565b915050610f17565b506110dd81611bb6565b949350505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156111d7578382906000526020600020906002020160405180604001604052908160008201805461113c9061217e565b80601f01602080910402602001604051908101604052809291908181526020018280546111689061217e565b80156111b55780601f1061118a576101008083540402835291602001916111b5565b820191906000526020600020905b81548152906001019060200180831161119857829003601f168201915b5050505050815260200160018201548152505081526020019060010190611109565b50505050905090565b600080806111ed846115cd565b905060005b81518110156112385781818151811061120d5761120d6122c1565b6020026020010151604001518361122491906123ab565b925080611230816122ed565b9150506111f2565b50909392505050565b6004602052816000526040600020818154811061125d57600080fd5b90600052602060002001600091509150505481565b6000818152600460209081526040918290208054835181840281018401909452808452606093928301828280156112c857602002820191906000526020600020905b8154815260200190600101908083116112b4575b50505050509050919050565b600380546112e19061217e565b80601f016020809104026020016040519081016040528092919081815260200182805461130d9061217e565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050505081565b606060018281548110611377576113776122c1565b906000526020600020906004020160000180546113939061217e565b80601f01602080910402602001604051908101604052809291908181526020018280546113bf9061217e565b80156112c85780601f106113e1576101008083540402835291602001916112c8565b820191906000526020600020905b8154815290600101906020018083116113ef5750939695505050505050565b600080805b6001548110156114615760018181548110611430576114306122c1565b9060005260206000209060040201600201548261144d91906123ab565b915080611459816122ed565b915050611413565b50919050565b6002546001600160a01b031633146114915760405162461bcd60e51b81526004016103e090612138565b60005b60005481101561156357826040516020016114af919061238f565b60405160208183030381529060405280519060200120600082815481106114d8576114d86122c1565b90600052602060002090600202016000016040516020016114f99190612319565b60405160208183030381529060405280519060200120036115515760405162461bcd60e51b8152602060048201526012602482015271436172676f206a61206578697374656e746560701b60448201526064016103e0565b8061155b816122ed565b915050611494565b50604080518082019091528281526020810182905260008054600181018255908052815182916002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019081906115bb9082612201565b50602082015181600101555050505050565b606060006115da83611272565b90506000815167ffffffffffffffff8111156115f8576115f8611d8b565b60405190808252806020026020018201604052801561165457816020015b6116416040518060800160405280606081526020016000815260200160008152602001606081525090565b8152602001906001900390816116165790505b50905060005b8251811015611816576000838281518110611677576116776122c1565b6020026020010151905060018181548110611694576116946122c1565b90600052602060002090600402016040518060800160405290816000820180546116bd9061217e565b80601f01602080910402602001604051908101604052809291908181526020018280546116e99061217e565b80156117365780601f1061170b57610100808354040283529160200191611736565b820191906000526020600020905b81548152906001019060200180831161171957829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820180546117639061217e565b80601f016020809104026020016040519081016040528092919081815260200182805461178f9061217e565b80156117dc5780601f106117b1576101008083540402835291602001916117dc565b820191906000526020600020905b8154815290600101906020018083116117bf57829003601f168201915b5050505050815250508383815181106117f7576117f76122c1565b602002602001018190525050808061180e906122ed565b91505061165a565b509392505050565b6118496040518060800160405280606081526020016000815260200160008152602001606081525090565b60005b6001548110156119ff57826001828154811061186a5761186a6122c1565b906000526020600020906004020160010154036119ed5760018181548110611894576118946122c1565b90600052602060002090600402016040518060800160405290816000820180546118bd9061217e565b80601f01602080910402602001604051908101604052809291908181526020018280546118e99061217e565b80156119365780601f1061190b57610100808354040283529160200191611936565b820191906000526020600020905b81548152906001019060200180831161191957829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820180546119639061217e565b80601f016020809104026020016040519081016040528092919081815260200182805461198f9061217e565b80156119dc5780601f106119b1576101008083540402835291602001916119dc565b820191906000526020600020905b8154815290600101906020018083116119bf57829003601f168201915b505050505081525050915050919050565b806119f7816122ed565b91505061184c565b5060405162461bcd60e51b815260206004820152601860248201527f43616e64696461746f206e616f20656e636f6e747261646f000000000000000060448201526064016103e0565b60606000825167ffffffffffffffff811115611a6657611a66611d8b565b604051908082528060200260200182016040528015611a8f578160200160208202803683370190505b50905060005b8351811015611b0b576001848281518110611ab257611ab26122c1565b602002602001015181548110611aca57611aca6122c1565b906000526020600020906004020160020154828281518110611aee57611aee6122c1565b602090810291909101015280611b03816122ed565b915050611a95565b5092915050565b6000805b6001548110156119ff578360018281548110611b3457611b346122c1565b90600052602060002090600402016001015403611ba4576000611b5684611272565b905060005b8151811015611ba15782828281518110611b7757611b776122c1565b602002602001015103611b8f57829350505050610a1b565b80611b99816122ed565b915050611b5b565b50505b80611bae816122ed565b915050611b16565b606060005b60018351611bc99190612306565b811015611cef5760005b6001828551611be29190612306565b611bec9190612306565b811015611cdc5783611bff8260016123ab565b81518110611c0f57611c0f6122c1565b602002602001015160400151848281518110611c2d57611c2d6122c1565b6020026020010151604001511015611cca576000848281518110611c5357611c536122c1565b6020026020010151905084826001611c6b91906123ab565b81518110611c7b57611c7b6122c1565b6020026020010151858381518110611c9557611c956122c1565b60209081029190910101528085611cad8460016123ab565b81518110611cbd57611cbd6122c1565b6020026020010181905250505b80611cd4816122ed565b915050611bd3565b5080611ce7816122ed565b915050611bbb565b5090919050565b600060208284031215611d0857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611d4757835183529284019291840191600101611d2b565b50909695505050505050565b60008060408385031215611d6657600080fd5b82356001600160a01b0381168114611d7d57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611db257600080fd5b813567ffffffffffffffff80821115611dcd57611dcd611d8b565b604051601f8301601f19908116603f01168101908282118183101715611df557611df5611d8b565b81604052838152866020858801011115611e0e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611e4457600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115611e6a57600080fd5b611e7688838901611da1565b93506060870135915080821115611e8c57600080fd5b50611e9987828801611da1565b91505092959194509250565b60008060408385031215611eb857600080fd5b50508035926020909101359150565b60005b83811015611ee2578181015183820152602001611eca565b50506000910152565b60008151808452611f03816020860160208601611ec7565b601f01601f19169290920160200192915050565b6020815260006104336020830184611eeb565b6000815160808452611f3f6080850182611eeb565b9050602083015160208501526040830151604085015260608301518482036060860152611f6c8282611eeb565b95945050505050565b6020815260006104336020830184611f2a565b600060208284031215611f9a57600080fd5b813567ffffffffffffffff811115611fb157600080fd5b6110dd84828501611da1565b604081526000611fd06040830185611eeb565b90508260208301529392505050565b608081526000611ff26080830187611eeb565b85602084015284604084015282810360608401526120108185611eeb565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561207057603f1988860301845261205e858351611f2a565b94509285019290850190600101612042565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156120e557888303603f19018552815180518785526120c888860182611eeb565b9189015194890194909452948701949250908601906001016120a4565b509098975050505050505050565b6000806040838503121561210657600080fd5b823567ffffffffffffffff81111561211d57600080fd5b61212985828601611da1565b95602094909401359450505050565b60208082526026908201527f4170656e6173206f20646f6e6f20706f64652066617a65722065737361206f7060408201526565726163616f60d01b606082015260800190565b600181811c9082168061219257607f821691505b60208210810361146157634e487b7160e01b600052602260045260246000fd5b601f8211156121fc57600081815260208120601f850160051c810160208610156121d95750805b601f850160051c820191505b818110156121f8578281556001016121e5565b5050505b505050565b815167ffffffffffffffff81111561221b5761221b611d8b565b61222f81612229845461217e565b846121b2565b602080601f831160018114612264576000841561224c5750858301515b600019600386901b1c1916600185901b1785556121f8565b600085815260208120601f198616915b8281101561229357888601518255948401946001909101908401612274565b50858210156122b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016122ff576122ff6122d7565b5060010190565b81810381811115610a1b57610a1b6122d7565b60008083546123278161217e565b6001828116801561233f576001811461235457612383565b60ff1984168752821515830287019450612383565b8760005260208060002060005b8581101561237a5781548a820152908401908201612361565b50505082870194505b50929695505050505050565b600082516123a1818460208701611ec7565b9190910192915050565b80820180821115610a1b57610a1b6122d756fea2646970667358221220a29c305f7e6a2908c271eebcc84fdbafecb691ddfc0c842bc1ed37446b29f00f64736f6c63430008130033";

type ChaincracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChaincracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chaincracy__factory extends ContractFactory {
  constructor(...args: ChaincracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Chaincracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Chaincracy__factory {
    return super.connect(runner) as Chaincracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChaincracyInterface {
    return new Interface(_abi) as ChaincracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Chaincracy {
    return new Contract(address, _abi, runner) as unknown as Chaincracy;
  }
}
