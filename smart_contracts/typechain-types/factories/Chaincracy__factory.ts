/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Chaincracy, ChaincracyInterface } from "../Chaincracy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidatoId",
        type: "uint256",
      },
    ],
    name: "VotoRegistrado",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosporCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_nomeCandidato",
        type: "string",
      },
      {
        internalType: "string",
        name: "_img",
        type: "string",
      },
    ],
    name: "adicionarCandidato",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
    ],
    name: "adicionarCargo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidatos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCandidato",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votos",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "img",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargoCandidatos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCargo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comecarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosDoCargo",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosIdsDoCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
    ],
    name: "getInformacaoCandidato",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidatoId",
        type: "uint256",
      },
    ],
    name: "getNomeCandidato",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarCargos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCargo",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Cargo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusEleicao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusVotacao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "votar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a1b9bdd17dcdd185c9d195960aa1b60a0526003906200002c9082620000f8565b503480156200003a57600080fd5b50600280546001600160a01b03191633179055620001c4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007e57607f821691505b6020821081036200009f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f357600081815260208120601f850160051c81016020861015620000ce5750805b601f850160051c820191505b81811015620000ef57828155600101620000da565b5050505b505050565b81516001600160401b0381111562000114576200011462000053565b6200012c8162000125845462000069565b84620000a5565b602080601f8311600181146200016457600084156200014b5750858301515b600019600386901b1c1916600185901b178555620000ef565b600085815260208120601f198616915b82811015620001955788860151825594840194600190910190840162000174565b5085821015620001b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ae880620001d46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063b503c3e711610071578063b503c3e71461028c578063bc243e6d1461029f578063c2989562146102a7578063e7d59662146102ba578063f85174cc146102da57600080fd5b80638da5cb5b146102005780638f023f851461022b5780638f32d59b1461024e5780639cf8dd5514610256578063af10f05e1461026b57600080fd5b80634fa5a16f116100f45780634fa5a16f146101aa57806358564860146101bd5780635fb9afba146101d2578063851a6c28146101e55780638a132f72146101f857600080fd5b80630ca73537146101265780630ee24c831461013057806327a22ec11461015957806333b2e20c14610197575b600080fd5b61012e6102fa565b005b61014361013e366004611477565b61035f565b6040516101509190611490565b60405180910390f35b6101876101673660046114d4565b600560209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610150565b61012e6101a53660046115af565b61037e565b61012e6101b8366004611626565b6105a5565b6101c561078e565b6040516101509190611698565b61012e6101e03660046116ab565b610820565b6101c56101f3366004611477565b61096e565b61012e610a1c565b600254610213906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b61023e610239366004611477565b610b0d565b60405161015094939291906116e8565b61012e610c5d565b61025e610cc9565b6040516101509190611724565b61027e610279366004611626565b610db6565b604051908152602001610150565b61014361029a366004611477565b610de7565b6101c5610e49565b6101c56102b5366004611477565b610ed7565b6102cd6102c8366004611477565b610f83565b604051610150919061178e565b6102ed6102e8366004611477565b6110d9565b60405161015091906117e3565b6002546001600160a01b0316331461032d5760405162461bcd60e51b815260040161032490611839565b60405180910390fd5b60408051808201909152600b81526a696e5f70726f677265737360a81b602082015260039061035c9082611908565b50565b6060600061036c83610de7565b905061037781611303565b9392505050565b6002546001600160a01b031633146103a85760405162461bcd60e51b815260040161032490611839565b60005b6001548110156104805783600182815481106103c9576103c96119c8565b9060005260206000209060040201600101540361046e5760006103eb86610de7565b905060005b815181101561046b578282828151811061040c5761040c6119c8565b6020026020010151036104595760405162461bcd60e51b81526020600482015260156024820152746e756d65726f206a61206361646173747261646f2160581b6044820152606401610324565b80610463816119f4565b9150506103f0565b50505b80610478816119f4565b9150506103ab565b5060005461049090600190611a0d565b8411156104d55760405162461bcd60e51b8152602060048201526013602482015272636172676f206e616f206578697374656e746560681b6044820152606401610324565b6040805160808101825283815260208101859052600091810182905260608101839052600180548082018255925280519091829160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190819061053d9082611908565b506020820151600182015560408201516002820155606082015160038201906105669082611908565b5050600180546000925061057a9190611a0d565b6000968752600460209081526040882080546001810182559089529720909601959095555050505050565b6040516a696e5f70726f677265737360a81b6020820152602b016040516020818303038152906040528051906020012060036040516020016105e79190611a20565b60405160208183030381529060405280519060200120146106405760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b6044820152606401610324565b33600090815260056020908152604080832084845290915290205460ff16156106c55760405162461bcd60e51b815260206004820152603160248201527f566f746f206a61207265676973747261646f20706f722065737361206361727460448201527065697261206e6573746520636172676f2160781b6064820152608401610324565b60006106d183836113cd565b9050600181815481106106e6576106e66119c8565b600091825260208220600260049092020101805491610704836119f4565b91905055507f652eeaa57ccbb2f4fa0be02c6b0e7c5fadf5452a75bbb3fccc36fea46443156c6001828154811061073d5761073d6119c8565b90600052602060002090600402016001015460405161075e91815260200190565b60405180910390a15033600090815260056020908152604080832093835292905220805460ff1916600117905550565b60606003805461079d9061187f565b80601f01602080910402602001604051908101604052809291908181526020018280546107c99061187f565b80156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050905090565b6002546001600160a01b0316331461084a5760405162461bcd60e51b815260040161032490611839565b60005b60005481101561091857816040516020016108689190611a96565b6040516020818303038152906040528051906020012060008281548110610891576108916119c8565b906000526020600020016000016040516020016108ae9190611a20565b60405160208183030381529060405280519060200120036109065760405162461bcd60e51b8152602060048201526012602482015271436172676f206a61206578697374656e746560701b6044820152606401610324565b80610910816119f4565b91505061084d565b50604080516020810190915281815260008054600181018255908052815182917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019081906109679082611908565b5050505050565b6000818154811061097e57600080fd5b6000918252602090912001805490915081906109999061187f565b80601f01602080910402602001604051908101604052809291908181526020018280546109c59061187f565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b5050505050905081565b6040516a696e5f70726f677265737360a81b6020820152602b01604051602081830303815290604052805190602001206003604051602001610a5e9190611a20565b6040516020818303038152906040528051906020012014610ab75760405162461bcd60e51b8152602060048201526013602482015272566f746163616f2066696e616c697a6164612160681b6044820152606401610324565b6002546001600160a01b03163314610ae15760405162461bcd60e51b815260040161032490611839565b604080518082019091526008815267199a5b9a5cda195960c21b602082015260039061035c9082611908565b60018181548110610b1d57600080fd5b9060005260206000209060040201600091509050806000018054610b409061187f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6c9061187f565b8015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b505050505090806001015490806002015490806003018054610bda9061187f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c069061187f565b8015610c535780601f10610c2857610100808354040283529160200191610c53565b820191906000526020600020905b815481529060010190602001808311610c3657829003601f168201915b5050505050905084565b6002546001600160a01b03163314610cc75760405162461bcd60e51b815260206004820152602760248201527f456e74726f75206e6f20494620652061206361727465697261206e616f2065686044820152661034b3bab0b61760c91b6064820152608401610324565b565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610dad57838290600052602060002001604051806020016040529081600082018054610d1c9061187f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d489061187f565b8015610d955780601f10610d6a57610100808354040283529160200191610d95565b820191906000526020600020905b815481529060010190602001808311610d7857829003601f168201915b50505050508152505081526020019060010190610ced565b50505050905090565b60046020528160005260406000208181548110610dd257600080fd5b90600052602060002001600091509150505481565b600081815260046020908152604091829020805483518184028101840190945280845260609392830182828015610e3d57602002820191906000526020600020905b815481526020019060010190808311610e29575b50505050509050919050565b60038054610e569061187f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e829061187f565b8015610ecf5780601f10610ea457610100808354040283529160200191610ecf565b820191906000526020600020905b815481529060010190602001808311610eb257829003601f168201915b505050505081565b606060018281548110610eec57610eec6119c8565b90600052602060002090600402016000018054610f089061187f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f349061187f565b8015610e3d5780601f10610f5657610100808354040283529160200191610e3d565b820191906000526020600020905b815481529060010190602001808311610f645750939695505050505050565b60015460609060009067ffffffffffffffff811115610fa457610fa461150c565b604051908082528060200260200182016040528015610fd757816020015b6060815260200190600190039081610fc25790505b5090506000610fe584610de7565b905060005b81518110156110d05760018181548110611006576110066119c8565b906000526020600020906004020160000180546110229061187f565b80601f016020809104026020016040519081016040528092919081815260200182805461104e9061187f565b801561109b5780601f106110705761010080835404028352916020019161109b565b820191906000526020600020905b81548152906001019060200180831161107e57829003601f168201915b50505050508382815181106110b2576110b26119c8565b602002602001018190525080806110c8906119f4565b915050610fea565b50909392505050565b6111046040518060800160405280606081526020016000815260200160008152602001606081525090565b60005b6001548110156112ba578260018281548110611125576111256119c8565b906000526020600020906004020160010154036112a8576001818154811061114f5761114f6119c8565b90600052602060002090600402016040518060800160405290816000820180546111789061187f565b80601f01602080910402602001604051908101604052809291908181526020018280546111a49061187f565b80156111f15780601f106111c6576101008083540402835291602001916111f1565b820191906000526020600020905b8154815290600101906020018083116111d457829003601f168201915b50505050508152602001600182015481526020016002820154815260200160038201805461121e9061187f565b80601f016020809104026020016040519081016040528092919081815260200182805461124a9061187f565b80156112975780601f1061126c57610100808354040283529160200191611297565b820191906000526020600020905b81548152906001019060200180831161127a57829003601f168201915b505050505081525050915050919050565b806112b2816119f4565b915050611107565b5060405162461bcd60e51b815260206004820152601860248201527f43616e64696461746f206e616f20656e636f6e747261646f00000000000000006044820152606401610324565b60606000825167ffffffffffffffff8111156113215761132161150c565b60405190808252806020026020018201604052801561134a578160200160208202803683370190505b50905060005b83518110156113c657600184828151811061136d5761136d6119c8565b602002602001015181548110611385576113856119c8565b9060005260206000209060040201600201548282815181106113a9576113a96119c8565b6020908102919091010152806113be816119f4565b915050611350565b5092915050565b6000805b6001548110156112ba5783600182815481106113ef576113ef6119c8565b9060005260206000209060040201600101540361145f57600061141184610de7565b905060005b815181101561145c5782828281518110611432576114326119c8565b60200260200101510361144a57829350505050611471565b80611454816119f4565b915050611416565b50505b80611469816119f4565b9150506113d1565b92915050565b60006020828403121561148957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156114c8578351835292840192918401916001016114ac565b50909695505050505050565b600080604083850312156114e757600080fd5b82356001600160a01b03811681146114fe57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261153357600080fd5b813567ffffffffffffffff8082111561154e5761154e61150c565b604051601f8301601f19908116603f011681019082821181831017156115765761157661150c565b8160405283815286602085880101111561158f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156115c557600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156115eb57600080fd5b6115f788838901611522565b9350606087013591508082111561160d57600080fd5b5061161a87828801611522565b91505092959194509250565b6000806040838503121561163957600080fd5b50508035926020909101359150565b60005b8381101561166357818101518382015260200161164b565b50506000910152565b60008151808452611684816020860160208601611648565b601f01601f19169290920160200192915050565b602081526000610377602083018461166c565b6000602082840312156116bd57600080fd5b813567ffffffffffffffff8111156116d457600080fd5b6116e084828501611522565b949350505050565b6080815260006116fb608083018761166c565b8560208401528460408401528281036060840152611719818561166c565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561178157878503603f1901845281515186865261176e8787018261166c565b955050928501929085019060010161174b565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561178157603f198886030184526117d185835161166c565b945092850192908501906001016117b5565b6020815260008251608060208401526117ff60a084018261166c565b905060208401516040840152604084015160608401526060840151601f19848303016080850152611830828261166c565b95945050505050565b60208082526026908201527f4170656e6173206f20646f6e6f20706f64652066617a65722065737361206f7060408201526565726163616f60d01b606082015260800190565b600181811c9082168061189357607f821691505b6020821081036118b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561190357600081815260208120601f850160051c810160208610156118e05750805b601f850160051c820191505b818110156118ff578281556001016118ec565b5050505b505050565b815167ffffffffffffffff8111156119225761192261150c565b61193681611930845461187f565b846118b9565b602080601f83116001811461196b57600084156119535750858301515b600019600386901b1c1916600185901b1785556118ff565b600085815260208120601f198616915b8281101561199a5788860151825594840194600190910190840161197b565b50858210156119b85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a0657611a066119de565b5060010190565b81810381811115611471576114716119de565b6000808354611a2e8161187f565b60018281168015611a465760018114611a5b57611a8a565b60ff1984168752821515830287019450611a8a565b8760005260208060002060005b85811015611a815781548a820152908401908201611a68565b50505082870194505b50929695505050505050565b60008251611aa8818460208701611648565b919091019291505056fea2646970667358221220a3f0cd8588a8478cc25a58ac855bd6b3f59ef0b90af53a8917c99a1ed1ca69db64736f6c63430008130033";

type ChaincracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChaincracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chaincracy__factory extends ContractFactory {
  constructor(...args: ChaincracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Chaincracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Chaincracy__factory {
    return super.connect(runner) as Chaincracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChaincracyInterface {
    return new Interface(_abi) as ChaincracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Chaincracy {
    return new Contract(address, _abi, runner) as unknown as Chaincracy;
  }
}
