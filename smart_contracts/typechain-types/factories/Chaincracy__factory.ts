/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Chaincracy, ChaincracyInterface } from "../Chaincracy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidatoId",
        type: "uint256",
      },
    ],
    name: "VotoRegistrado",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosporCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_nomeCandidato",
        type: "string",
      },
      {
        internalType: "string",
        name: "_img",
        type: "string",
      },
    ],
    name: "adicionarCandidato",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
    ],
    name: "adicionarCargo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidatos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCandidato",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votos",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "img",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargoCandidatos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCargo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosDoCargo",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosIdsDoCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
    ],
    name: "getInformacaoCandidato",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidatoId",
        type: "uint256",
      },
    ],
    name: "getNomeCandidato",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusVotacao",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "votar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b17905534801561002357600080fd5b50600280546001600160a01b03191633179055611532806100456000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063bc243e6d11610066578063bc243e6d14610250578063c298956214610264578063e7d5966214610277578063f85174cc1461029757600080fd5b80638da5cb5b146101ce5780638f023f85146101f9578063af10f05e1461021c578063b503c3e71461023d57600080fd5b80634fa5a16f116100d35780634fa5a16f146101765780635fb9afba14610189578063851a6c281461019c5780638a132f72146101bc57600080fd5b80630ee24c83146100fa57806327a22ec11461012357806333b2e20c14610161575b600080fd5b61010d610108366004610f8e565b6102b7565b60405161011a9190610fa7565b60405180910390f35b610151610131366004610feb565b600460209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161011a565b61017461016f3660046110c6565b6102d6565b005b61017461018436600461113d565b610534565b61017461019736600461115f565b6106b0565b6101af6101aa366004610f8e565b61075d565b60405161011a91906111e2565b6101746002805460ff60a01b19169055565b6002546101e1906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61020c610207366004610f8e565b61080b565b60405161011a94939291906111f5565b61022f61022a36600461113d565b61095b565b60405190815260200161011a565b61010d61024b366004610f8e565b61098c565b60025461015190600160a01b900460ff1681565b6101af610272366004610f8e565b6109ee565b61028a610285366004610f8e565b610a9a565b60405161011a9190611231565b6102aa6102a5366004610f8e565b610bf0565b60405161011a9190611293565b606060006102c48361098c565b90506102cf81610e1a565b9392505050565b6002546001600160a01b031633146103095760405162461bcd60e51b8152600401610300906112e9565b60405180910390fd5b600254600160a01b900460ff1615156001146103375760405162461bcd60e51b81526004016103009061132f565b60005b60015481101561040f5783600182815481106103585761035861135b565b906000526020600020906004020160010154036103fd57600061037a8661098c565b905060005b81518110156103fa578282828151811061039b5761039b61135b565b6020026020010151036103e85760405162461bcd60e51b81526020600482015260156024820152746e756d65726f206a61206361646173747261646f2160581b6044820152606401610300565b806103f281611387565b91505061037f565b50505b8061040781611387565b91505061033a565b5060005461041f906001906113a0565b8411156104645760405162461bcd60e51b8152602060048201526013602482015272636172676f206e616f206578697374656e746560681b6044820152606401610300565b6040805160808101825283815260208101859052600091810182905260608101839052600180548082018255925280519091829160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906104cc908261143c565b506020820151600182015560408201516002820155606082015160038201906104f5908261143c565b5050600180546000925061050991906113a0565b6000968752600360209081526040882080546001810182559089529720909601959095555050505050565b600254600160a01b900460ff1615156001146105625760405162461bcd60e51b81526004016103009061132f565b33600090815260046020908152604080832084845290915290205460ff16156105e75760405162461bcd60e51b815260206004820152603160248201527f566f746f206a61207265676973747261646f20706f722065737361206361727460448201527065697261206e6573746520636172676f2160781b6064820152608401610300565b60006105f38383610ee4565b9050600181815481106106085761060861135b565b60009182526020822060026004909202010180549161062683611387565b91905055507f652eeaa57ccbb2f4fa0be02c6b0e7c5fadf5452a75bbb3fccc36fea46443156c6001828154811061065f5761065f61135b565b90600052602060002090600402016001015460405161068091815260200190565b60405180910390a15033600090815260046020908152604080832093835292905220805460ff1916600117905550565b6002546001600160a01b031633146106da5760405162461bcd60e51b8152600401610300906112e9565b600254600160a01b900460ff1615156001146107085760405162461bcd60e51b81526004016103009061132f565b604080516020810190915281815260008054600181018255908052815182917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301908190610756908261143c565b5050505050565b6000818154811061076d57600080fd5b600091825260209091200180549091508190610788906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546107b4906113b3565b80156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b5050505050905081565b6001818154811061081b57600080fd5b906000526020600020906004020160009150905080600001805461083e906113b3565b80601f016020809104026020016040519081016040528092919081815260200182805461086a906113b3565b80156108b75780601f1061088c576101008083540402835291602001916108b7565b820191906000526020600020905b81548152906001019060200180831161089a57829003601f168201915b5050505050908060010154908060020154908060030180546108d8906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610904906113b3565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b5050505050905084565b6003602052816000526040600020818154811061097757600080fd5b90600052602060002001600091509150505481565b6000818152600360209081526040918290208054835181840281018401909452808452606093928301828280156109e257602002820191906000526020600020905b8154815260200190600101908083116109ce575b50505050509050919050565b606060018281548110610a0357610a0361135b565b90600052602060002090600402016000018054610a1f906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4b906113b3565b80156109e25780601f10610a6d576101008083540402835291602001916109e2565b820191906000526020600020905b815481529060010190602001808311610a7b5750939695505050505050565b60015460609060009067ffffffffffffffff811115610abb57610abb611023565b604051908082528060200260200182016040528015610aee57816020015b6060815260200190600190039081610ad95790505b5090506000610afc8461098c565b905060005b8151811015610be75760018181548110610b1d57610b1d61135b565b90600052602060002090600402016000018054610b39906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b65906113b3565b8015610bb25780601f10610b8757610100808354040283529160200191610bb2565b820191906000526020600020905b815481529060010190602001808311610b9557829003601f168201915b5050505050838281518110610bc957610bc961135b565b60200260200101819052508080610bdf90611387565b915050610b01565b50909392505050565b610c1b6040518060800160405280606081526020016000815260200160008152602001606081525090565b60005b600154811015610dd1578260018281548110610c3c57610c3c61135b565b90600052602060002090600402016001015403610dbf5760018181548110610c6657610c6661135b565b9060005260206000209060040201604051806080016040529081600082018054610c8f906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbb906113b3565b8015610d085780601f10610cdd57610100808354040283529160200191610d08565b820191906000526020600020905b815481529060010190602001808311610ceb57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382018054610d35906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d61906113b3565b8015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b505050505081525050915050919050565b80610dc981611387565b915050610c1e565b5060405162461bcd60e51b815260206004820152601860248201527f43616e64696461746f206e616f20656e636f6e747261646f00000000000000006044820152606401610300565b60606000825167ffffffffffffffff811115610e3857610e38611023565b604051908082528060200260200182016040528015610e61578160200160208202803683370190505b50905060005b8351811015610edd576001848281518110610e8457610e8461135b565b602002602001015181548110610e9c57610e9c61135b565b906000526020600020906004020160020154828281518110610ec057610ec061135b565b602090810291909101015280610ed581611387565b915050610e67565b5092915050565b6000805b600154811015610dd1578360018281548110610f0657610f0661135b565b90600052602060002090600402016001015403610f76576000610f288461098c565b905060005b8151811015610f735782828281518110610f4957610f4961135b565b602002602001015103610f6157829350505050610f88565b80610f6b81611387565b915050610f2d565b50505b80610f8081611387565b915050610ee8565b92915050565b600060208284031215610fa057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610fdf57835183529284019291840191600101610fc3565b50909695505050505050565b60008060408385031215610ffe57600080fd5b82356001600160a01b038116811461101557600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261104a57600080fd5b813567ffffffffffffffff8082111561106557611065611023565b604051601f8301601f19908116603f0116810190828211818310171561108d5761108d611023565b816040528381528660208588010111156110a657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156110dc57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561110257600080fd5b61110e88838901611039565b9350606087013591508082111561112457600080fd5b5061113187828801611039565b91505092959194509250565b6000806040838503121561115057600080fd5b50508035926020909101359150565b60006020828403121561117157600080fd5b813567ffffffffffffffff81111561118857600080fd5b61119484828501611039565b949350505050565b6000815180845260005b818110156111c2576020818501810151868301820152016111a6565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006102cf602083018461119c565b608081526000611208608083018761119c565b8560208401528460408401528281036060840152611226818561119c565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561128657603f1988860301845261127485835161119c565b94509285019290850190600101611258565b5092979650505050505050565b6020815260008251608060208401526112af60a084018261119c565b905060208401516040840152604084015160608401526060840151601f198483030160808501526112e0828261119c565b95945050505050565b60208082526026908201527f4170656e6173206f20646f6e6f20706f64652066617a65722065737361206f7060408201526565726163616f60d01b606082015260800190565b602080825260129082015271566f746163616f2066696e616c697a61646160701b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161139957611399611371565b5060010190565b81810381811115610f8857610f88611371565b600181811c908216806113c757607f821691505b6020821081036113e757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561143757600081815260208120601f850160051c810160208610156114145750805b601f850160051c820191505b8181101561143357828155600101611420565b5050505b505050565b815167ffffffffffffffff81111561145657611456611023565b61146a8161146484546113b3565b846113ed565b602080601f83116001811461149f57600084156114875750858301515b600019600386901b1c1916600185901b178555611433565b600085815260208120601f198616915b828110156114ce578886015182559484019460019091019084016114af565b50858210156114ec5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220387be4e3de95c4c957a517fbfd0ef20662e6ec93e0a2d3276322ac101964967c64736f6c63430008130033";

type ChaincracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChaincracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chaincracy__factory extends ContractFactory {
  constructor(...args: ChaincracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Chaincracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Chaincracy__factory {
    return super.connect(runner) as Chaincracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChaincracyInterface {
    return new Interface(_abi) as ChaincracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Chaincracy {
    return new Contract(address, _abi, runner) as unknown as Chaincracy;
  }
}
