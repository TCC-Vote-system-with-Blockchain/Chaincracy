/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Chaincracy, ChaincracyInterface } from "../Chaincracy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidatoId",
        type: "uint256",
      },
    ],
    name: "VotoRegistrado",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "TotalVotosporCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_nomeCandidato",
        type: "string",
      },
      {
        internalType: "string",
        name: "_img",
        type: "string",
      },
    ],
    name: "adicionarCandidato",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_nomeCargo",
        type: "string",
      },
    ],
    name: "adicionarCargo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "candidatos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCandidato",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votos",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "img",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargoCandidatos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cargos",
    outputs: [
      {
        internalType: "string",
        name: "nomeCargo",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comecarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizarVotacao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosDoCargo",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "getCandidatosIdsDoCargo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
    ],
    name: "getInformacaoCandidato",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCandidato",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "numero",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votos",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "img",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Candidato",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_candidatoId",
        type: "uint256",
      },
    ],
    name: "getNomeCandidato",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listarCargos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "nomeCargo",
            type: "string",
          },
        ],
        internalType: "struct Chaincracy.Cargo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusEleicao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "statusVotacao",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numero",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cargoId",
        type: "uint256",
      },
    ],
    name: "votar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a1b9bdd17dcdd185c9d195960aa1b60a0526003906200002c9082620000f8565b503480156200003a57600080fd5b50600280546001600160a01b03191633179055620001c4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007e57607f821691505b6020821081036200009f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f357600081815260208120601f850160051c81016020861015620000ce5750805b601f850160051c820191505b81811015620000ef57828155600101620000da565b5050505b505050565b81516001600160401b0381111562000114576200011462000053565b6200012c8162000125845462000069565b84620000a5565b602080601f8311600181146200016457600084156200014b5750858301515b600019600386901b1c1916600185901b178555620000ef565b600085815260208120601f198616915b82811015620001955788860151825594840194600190910190840162000174565b5085821015620001b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b4680620001d46000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063b503c3e711610071578063b503c3e714610279578063bc243e6d1461028c578063c298956214610294578063e7d59662146102a7578063f85174cc146102c757600080fd5b80638da5cb5b146102035780638f023f851461022e5780639cf8dd5514610251578063af10f05e1461026657600080fd5b80634fa5a16f116100e95780634fa5a16f1461019f57806358564860146101b25780635fb9afba146101c7578063851a6c28146101e85780638a132f72146101fb57600080fd5b80630ca735371461011b5780630ee24c831461012557806327a22ec11461014e57806333b2e20c1461018c575b600080fd5b6101236102e7565b005b6101386101333660046114b0565b61034c565b60405161014591906114c9565b60405180910390f35b61017c61015c36600461150d565b600560209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610145565b61012361019a3660046115e8565b61036b565b6101236101ad36600461165f565b610607565b6101ba6107ca565b60405161014591906116d1565b6101da6101d53660046116e4565b61085c565b604051908152602001610145565b6101ba6101f63660046114b0565b610a38565b610123610ae6565b600254610216906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b61024161023c3660046114b0565b610b3c565b6040516101459493929190611719565b610259610c8c565b6040516101459190611755565b6101da61027436600461165f565b610def565b6101386102873660046114b0565b610e20565b6101ba610e82565b6101ba6102a23660046114b0565b610f10565b6102ba6102b53660046114b0565b610fbc565b60405161014591906117bf565b6102da6102d53660046114b0565b611112565b6040516101459190611814565b6002546001600160a01b0316331461031a5760405162461bcd60e51b81526004016103119061186a565b60405180910390fd5b60408051808201909152600b81526a696e5f70726f677265737360a81b60208201526003906103499082611939565b50565b6060600061035983610e20565b90506103648161133c565b9392505050565b6002546001600160a01b031633146103955760405162461bcd60e51b81526004016103119061186a565b6040516a696e5f70726f677265737360a81b6020820152602b016040516020818303038152906040528051906020012060036040516020016103d791906119f9565b604051602081830303815290604052805190602001201461040a5760405162461bcd60e51b815260040161031190611a6f565b60005b6001548110156104e257836001828154811061042b5761042b611a9c565b906000526020600020906004020160010154036104d057600061044d86610e20565b905060005b81518110156104cd578282828151811061046e5761046e611a9c565b6020026020010151036104bb5760405162461bcd60e51b81526020600482015260156024820152746e756d65726f206a61206361646173747261646f2160581b6044820152606401610311565b806104c581611ac8565b915050610452565b50505b806104da81611ac8565b91505061040d565b506000546104f290600190611ae1565b8411156105375760405162461bcd60e51b8152602060048201526013602482015272636172676f206e616f206578697374656e746560681b6044820152606401610311565b6040805160808101825283815260208101859052600091810182905260608101839052600180548082018255925280519091829160049091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190819061059f9082611939565b506020820151600182015560408201516002820155606082015160038201906105c89082611939565b505060018054600092506105dc9190611ae1565b6000968752600460209081526040882080546001810182559089529720909601959095555050505050565b6040516a696e5f70726f677265737360a81b6020820152602b0160405160208183030381529060405280519060200120600360405160200161064991906119f9565b604051602081830303815290604052805190602001201461067c5760405162461bcd60e51b815260040161031190611a6f565b33600090815260056020908152604080832084845290915290205460ff16156107015760405162461bcd60e51b815260206004820152603160248201527f566f746f206a61207265676973747261646f20706f722065737361206361727460448201527065697261206e6573746520636172676f2160781b6064820152608401610311565b600061070d8383611406565b90506001818154811061072257610722611a9c565b60009182526020822060026004909202010180549161074083611ac8565b91905055507f652eeaa57ccbb2f4fa0be02c6b0e7c5fadf5452a75bbb3fccc36fea46443156c6001828154811061077957610779611a9c565b90600052602060002090600402016001015460405161079a91815260200190565b60405180910390a15033600090815260056020908152604080832093835292905220805460ff1916600117905550565b6060600380546107d9906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610805906118b0565b80156108525780601f1061082757610100808354040283529160200191610852565b820191906000526020600020905b81548152906001019060200180831161083557829003601f168201915b5050505050905090565b6002546000906001600160a01b031633146108895760405162461bcd60e51b81526004016103119061186a565b6040516a696e5f70726f677265737360a81b6020820152602b016040516020818303038152906040528051906020012060036040516020016108cb91906119f9565b60405160208183030381529060405280519060200120146108fe5760405162461bcd60e51b815260040161031190611a6f565b60005b6000548110156109cc578260405160200161091c9190611af4565b604051602081830303815290604052805190602001206000828154811061094557610945611a9c565b9060005260206000200160000160405160200161096291906119f9565b60405160208183030381529060405280519060200120036109ba5760405162461bcd60e51b8152602060048201526012602482015271436172676f206a61206578697374656e746560701b6044820152606401610311565b806109c481611ac8565b915050610901565b50604080516020810190915282815260008054600181018255908052815182917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301908190610a1b9082611939565b505060008054909150610a3090600190611ae1565b949350505050565b60008181548110610a4857600080fd5b600091825260209091200180549091508190610a63906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8f906118b0565b8015610adc5780601f10610ab157610100808354040283529160200191610adc565b820191906000526020600020905b815481529060010190602001808311610abf57829003601f168201915b5050505050905081565b6002546001600160a01b03163314610b105760405162461bcd60e51b81526004016103119061186a565b604080518082019091526008815267199a5b9a5cda195960c21b60208201526003906103499082611939565b60018181548110610b4c57600080fd5b9060005260206000209060040201600091509050806000018054610b6f906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9b906118b0565b8015610be85780601f10610bbd57610100808354040283529160200191610be8565b820191906000526020600020905b815481529060010190602001808311610bcb57829003601f168201915b505050505090806001015490806002015490806003018054610c09906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c35906118b0565b8015610c825780601f10610c5757610100808354040283529160200191610c82565b820191906000526020600020905b815481529060010190602001808311610c6557829003601f168201915b5050505050905084565b6040516a696e5f70726f677265737360a81b6020820152606090602b01604051602081830303815290604052805190602001206003604051602001610cd191906119f9565b6040516020818303038152906040528051906020012014610d045760405162461bcd60e51b815260040161031190611a6f565b6000805480602002602001604051908101604052809291908181526020016000905b82821015610de657838290600052602060002001604051806020016040529081600082018054610d55906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d81906118b0565b8015610dce5780601f10610da357610100808354040283529160200191610dce565b820191906000526020600020905b815481529060010190602001808311610db157829003601f168201915b50505050508152505081526020019060010190610d26565b50505050905090565b60046020528160005260406000208181548110610e0b57600080fd5b90600052602060002001600091509150505481565b600081815260046020908152604091829020805483518184028101840190945280845260609392830182828015610e7657602002820191906000526020600020905b815481526020019060010190808311610e62575b50505050509050919050565b60038054610e8f906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebb906118b0565b8015610f085780601f10610edd57610100808354040283529160200191610f08565b820191906000526020600020905b815481529060010190602001808311610eeb57829003601f168201915b505050505081565b606060018281548110610f2557610f25611a9c565b90600052602060002090600402016000018054610f41906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6d906118b0565b8015610e765780601f10610f8f57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610f9d5750939695505050505050565b60015460609060009067ffffffffffffffff811115610fdd57610fdd611545565b60405190808252806020026020018201604052801561101057816020015b6060815260200190600190039081610ffb5790505b509050600061101e84610e20565b905060005b8151811015611109576001818154811061103f5761103f611a9c565b9060005260206000209060040201600001805461105b906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054611087906118b0565b80156110d45780601f106110a9576101008083540402835291602001916110d4565b820191906000526020600020905b8154815290600101906020018083116110b757829003601f168201915b50505050508382815181106110eb576110eb611a9c565b6020026020010181905250808061110190611ac8565b915050611023565b50909392505050565b61113d6040518060800160405280606081526020016000815260200160008152602001606081525090565b60005b6001548110156112f357826001828154811061115e5761115e611a9c565b906000526020600020906004020160010154036112e1576001818154811061118857611188611a9c565b90600052602060002090600402016040518060800160405290816000820180546111b1906118b0565b80601f01602080910402602001604051908101604052809291908181526020018280546111dd906118b0565b801561122a5780601f106111ff5761010080835404028352916020019161122a565b820191906000526020600020905b81548152906001019060200180831161120d57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382018054611257906118b0565b80601f0160208091040260200160405190810160405280929190818152602001828054611283906118b0565b80156112d05780601f106112a5576101008083540402835291602001916112d0565b820191906000526020600020905b8154815290600101906020018083116112b357829003601f168201915b505050505081525050915050919050565b806112eb81611ac8565b915050611140565b5060405162461bcd60e51b815260206004820152601860248201527f43616e64696461746f206e616f20656e636f6e747261646f00000000000000006044820152606401610311565b60606000825167ffffffffffffffff81111561135a5761135a611545565b604051908082528060200260200182016040528015611383578160200160208202803683370190505b50905060005b83518110156113ff5760018482815181106113a6576113a6611a9c565b6020026020010151815481106113be576113be611a9c565b9060005260206000209060040201600201548282815181106113e2576113e2611a9c565b6020908102919091010152806113f781611ac8565b915050611389565b5092915050565b6000805b6001548110156112f357836001828154811061142857611428611a9c565b9060005260206000209060040201600101540361149857600061144a84610e20565b905060005b8151811015611495578282828151811061146b5761146b611a9c565b602002602001015103611483578293505050506114aa565b8061148d81611ac8565b91505061144f565b50505b806114a281611ac8565b91505061140a565b92915050565b6000602082840312156114c257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611501578351835292840192918401916001016114e5565b50909695505050505050565b6000806040838503121561152057600080fd5b82356001600160a01b038116811461153757600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261156c57600080fd5b813567ffffffffffffffff8082111561158757611587611545565b604051601f8301601f19908116603f011681019082821181831017156115af576115af611545565b816040528381528660208588010111156115c857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156115fe57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561162457600080fd5b6116308883890161155b565b9350606087013591508082111561164657600080fd5b506116538782880161155b565b91505092959194509250565b6000806040838503121561167257600080fd5b50508035926020909101359150565b60005b8381101561169c578181015183820152602001611684565b50506000910152565b600081518084526116bd816020860160208601611681565b601f01601f19169290920160200192915050565b60208152600061036460208301846116a5565b6000602082840312156116f657600080fd5b813567ffffffffffffffff81111561170d57600080fd5b610a308482850161155b565b60808152600061172c60808301876116a5565b856020840152846040840152828103606084015261174a81856116a5565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156117b257878503603f1901845281515186865261179f878701826116a5565b955050928501929085019060010161177c565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156117b257603f198886030184526118028583516116a5565b945092850192908501906001016117e6565b60208152600082516080602084015261183060a08401826116a5565b905060208401516040840152604084015160608401526060840151601f1984830301608085015261186182826116a5565b95945050505050565b60208082526026908201527f4170656e6173206f20646f6e6f20706f64652066617a65722065737361206f7060408201526565726163616f60d01b606082015260800190565b600181811c908216806118c457607f821691505b6020821081036118e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561193457600081815260208120601f850160051c810160208610156119115750805b601f850160051c820191505b818110156119305782815560010161191d565b5050505b505050565b815167ffffffffffffffff81111561195357611953611545565b6119678161196184546118b0565b846118ea565b602080601f83116001811461199c57600084156119845750858301515b600019600386901b1c1916600185901b178555611930565b600085815260208120601f198616915b828110156119cb578886015182559484019460019091019084016119ac565b50858210156119e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354611a07816118b0565b60018281168015611a1f5760018114611a3457611a63565b60ff1984168752821515830287019450611a63565b8760005260208060002060005b85811015611a5a5781548a820152908401908201611a41565b50505082870194505b50929695505050505050565b602080825260139082015272566f746163616f2066696e616c697a6164612160681b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ada57611ada611ab2565b5060010190565b818103818111156114aa576114aa611ab2565b60008251611b06818460208701611681565b919091019291505056fea264697066735822122072a7c6c8fdb91659e89501ad5d9ed49b1872dbb13dced4b87c8ac327ed2ccdf664736f6c63430008130033";

type ChaincracyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChaincracyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chaincracy__factory extends ContractFactory {
  constructor(...args: ChaincracyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Chaincracy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Chaincracy__factory {
    return super.connect(runner) as Chaincracy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChaincracyInterface {
    return new Interface(_abi) as ChaincracyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Chaincracy {
    return new Contract(address, _abi, runner) as unknown as Chaincracy;
  }
}
